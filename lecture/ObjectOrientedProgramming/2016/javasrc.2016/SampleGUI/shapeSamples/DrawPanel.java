/*
 * DrawPanel.java
 *
 * Created on 2008/11/21, 18:28
 * @author  tadaki
 */
package shapeSamples;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.geom.*;
import java.awt.image.BufferedImage;
import java.io.*;
import myLib.utils.FileUtils;

public class DrawPanel extends javax.swing.JPanel {

    private BufferedImage image = null;

    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();
        initializeImage();
    }

    @Override
    public void paintComponent(java.awt.Graphics g) {
        if (image == null) {
            return;
        }
        //ここではimageを貼り付けるだけ
        g.drawImage(image, 0, 0, image.getWidth(), image.getHeight(), this);
    }

    public void clear() {
        initializeImage();
    }

    /**
     * 描画イメージを初期化する
     */
    private void initializeImage() {
        Dimension dimension = getPreferredSize();
        //空のイメージ生成
        image = new BufferedImage(dimension.width, dimension.height,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g = (Graphics2D) image.getGraphics();
        g.setColor(this.getBackground());//背景色で塗りつぶし
        g.fillRect(0, 0, dimension.width, dimension.height);
    }

    /**
     * 描画イメージ生成
     */
    public void drawSamples() {
        initializeImage();
        Graphics2D g = (Graphics2D) image.getGraphics();
        //四角形
        Rectangle2D.Double rect
                = new Rectangle2D.Double(50., 50., 100., 100.);
        g.setColor(Color.GREEN);
        g.fill(rect);
        //楕円
        Ellipse2D.Double ellipse
                = new Ellipse2D.Double(200., 200., 100., 50.);
        g.setColor(Color.RED);
        g.draw(ellipse);
        //直線
        g.setColor(new Color(30, 20, 100));
        Line2D.Double line = new Line2D.Double(0., 0., 400., 300.);
        g.draw(line);
    }

    /**
     * イメージをファイルへ保存
     *
     * @param file 保存先ファイル
     */
    public void saveImage(File file) {
        if (!fileChooser.FileUtilGUI.checkWritable(file)) {
            return;
        }
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(file);
        } catch (FileNotFoundException ex) {
            fileChooser.FileUtilGUI.showError(ex.getMessage());
        }
        if (out != null) {
            String ext = FileUtils.getExtention(file.getName());
            try {
                javax.imageio.ImageIO.write(image, ext, out);
                String message
                        = "イメージを" + file.getName() + "に保存しました。";
                fileChooser.FileUtilGUI.showMessage(message);
            } catch (IOException ex) {
                fileChooser.FileUtilGUI.showError(ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(400, 400));
        setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
