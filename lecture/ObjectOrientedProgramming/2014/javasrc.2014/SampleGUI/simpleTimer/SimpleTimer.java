/*
 * SimpleTimer.java
 *
 * Created on 2008/12/03, 20:46
 * @author tadaki
 */
package simpleTimer;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class SimpleTimer extends JFrame implements Runnable {

    private final Timer timerLabel;
    private final SetTimePanel setTimePanel;
    private Thread runner = null;
    private volatile boolean running = false;
    private final Color backgroundNormal;
    private Color backgroundOver;

    /**
     * Creates new form SimpleTimer
     */
    public SimpleTimer() {
        initComponents();
        timerLabel = new Timer();
        showPanel.add(timerLabel);
        setTimePanel = new SetTimePanel();
        backgroundNormal = showPanel.getBackground();
        pack();
    }

    @Override
    public void run() {
        while (running) {
            if (!timerLabel.setTime()) {
                showPanel.setBackground(backgroundOver);
            }
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttons = new javax.swing.JPanel();
        quit = new javax.swing.JButton();
        toggle = new javax.swing.JToggleButton();
        setTime = new javax.swing.JButton();
        showPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Timer");

        buttons.setBackground(java.awt.Color.cyan);

        quit.setBackground(new java.awt.Color(255, 200, 0));
        quit.setText("QUIT");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });
        buttons.add(quit);

        toggle.setBackground(new java.awt.Color(255, 200, 0));
        toggle.setText("START");
        toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleActionPerformed(evt);
            }
        });
        buttons.add(toggle);

        setTime.setBackground(new java.awt.Color(255, 200, 0));
        setTime.setText("SET");
        setTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTimeActionPerformed(evt);
            }
        });
        buttons.add(setTime);

        getContentPane().add(buttons, java.awt.BorderLayout.CENTER);

        showPanel.setBackground(new java.awt.Color(0, 255, 255));
        getContentPane().add(showPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * START/STOP トグルボタンの動作
     *
     * @param evt
     */
private void toggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleActionPerformed
    boolean isRunning = toggle.isSelected();
    if (isRunning) {
        toggle.setText("STOP");
        timerLabel.start();
        running = true;
        runner = new Thread(this);
        runner.start();
    } else {
        toggle.setText("START");
        timerLabel.stop();
        running = false;
    }
    showPanel.setBackground(backgroundNormal);
    pack();
}//GEN-LAST:event_toggleActionPerformed

private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
    System.exit(0);
}//GEN-LAST:event_quitActionPerformed

    /**
     * SET ボタンの動作
     *
     * @param evt
     */
    private void setTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setTimeActionPerformed
        //停止する
        toggle.setSelected(false);
        toggle.setText("START");
        timerLabel.stop();
        //設定用Dialogの表示
        int answer = JOptionPane.showOptionDialog(new JFrame(), setTimePanel,
                "時間設定", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (answer == JOptionPane.OK_OPTION) {
            //OKが押されたときに、制限時間を設定
            int m = setTimePanel.getMinute();
            int s = setTimePanel.getSecond();
            timerLabel.setMax(60 * m + s);
        } else {
            setTimePanel.setDefault();
        }
    }//GEN-LAST:event_setTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new SimpleTimer().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttons;
    private javax.swing.JButton quit;
    private javax.swing.JButton setTime;
    private javax.swing.JPanel showPanel;
    private javax.swing.JToggleButton toggle;
    // End of variables declaration//GEN-END:variables
}
